# Generated by Django 4.0.6 on 2022-07-27 19:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=64, verbose_name='Заголовок')),
                ('start_date', models.DateField(db_index=True, verbose_name='Дата начала')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=64, verbose_name='Заголовок')),
                ('start_date', models.DateField(db_index=True, verbose_name='Дата начала')),
                ('start_time', models.TimeField(db_index=True, verbose_name='Время начала')),
                ('end_time', models.TimeField(db_index=True, verbose_name='Время завершения')),
                ('description', models.TextField(verbose_name='Описание')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='meetups.event')),
            ],
            options={
                'verbose_name': 'Блок',
                'verbose_name_plural': 'Блоки',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(db_index=True, max_length=32, verbose_name='Имя')),
                ('lastname', models.CharField(db_index=True, max_length=32, verbose_name='Фамилия')),
                ('company', models.CharField(db_index=True, max_length=32, verbose_name='Компания')),
                ('position', models.CharField(db_index=True, max_length=64, verbose_name='Должность')),
                ('phone_number', models.CharField(db_index=True, max_length=16, verbose_name='Телефон')),
                ('email', models.EmailField(db_index=True, max_length=32, verbose_name='Email')),
                ('telegram_id', models.CharField(db_index=True, max_length=16, verbose_name='Telegram ID')),
                ('about_oneself', models.TextField(verbose_name='О себе')),
            ],
            options={
                'verbose_name': 'Посетитель',
                'verbose_name_plural': 'Посетители',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(db_index=True, max_length=32, verbose_name='Имя')),
                ('lastname', models.CharField(db_index=True, max_length=32, verbose_name='Фамилия')),
                ('telegram_id', models.CharField(db_index=True, max_length=16, verbose_name='Telegram ID')),
                ('section', models.ManyToManyField(related_name='speakers', to='meetups.section')),
            ],
            options={
                'verbose_name': 'Спикер',
                'verbose_name_plural': 'Спикеры',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(db_index=True, verbose_name='Вопрос')),
                ('answer', models.TextField(db_index=True, verbose_name='Ответ')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='meetups.section')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='meetups.visitor')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
    ]
